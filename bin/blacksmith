#!/usr/bin/env node

var flatiron = require("flatiron"),
    util = require("utile"),
    fs = require("fs"),
    smith = require("../lib/blacksmith"),
    winston = require("winston"), // TODO: Use log plugin
    colors = require("colors"),
    cliff = require("cliff"),
    app = flatiron.app;

app.use(flatiron.plugins.cli, {
  dir: __dirname + "/../lib/commands",
  usage: [
    "",                                                      
    ",,    ,,            ,,                       ,  ,,    ".yellow,
    "||    ||   _        ||                   '  ||  ||    ".yellow,
    "||/|, ||  < \\,  _-_ ||/\\  _-_, \\\\/\\\\/\\\\ \\\\ =||= ||/\\\\ ".yellow,
    "|| || ||  /-|| ||   ||_< ||_.  || || || ||  ||  || || ".yellow,
    "|| |' || (( || ||   || |  ~ || || || || ||  ||  || || ".yellow,
    "\\\\/   \\\\  \\/\\\\ \\\\,/ \\\\,\\ ,-_-  \\\\ \\\\ \\\\ \\\\  \\\\, \\\\ |/ ".yellow,
    "                                                  _/  ".yellow,
    "",
    "The static site generator " + "from "+"Nodejitsu".grey+"!",
    "https://github.com/flatiron/blacksmith",
    "",
    "Usage:".yellow.bold,
    "",
    "    blacksmith <task> <param1> <param2> ...",
    "",
    "Commands:".yellow.bold,
    "",
    "* "+"`blacksmith generate`".yellow+": Generate a static site",
    "* "+"`blacksmith preview`".yellow +": Serve your static site on localhost",
    "* "+"`blacksmith init`".yellow +": Create a new blacksmith site",
    "* "+"`blacksmith post`".yellow+": Create a new page for your site",
    "",
    "For more help, visit:",
    "",
    "* "+"https://github.com/flatiron/blacksmith".yellow.bold,
    ""
  ].join("\n")
});

if (app.argv.v) {
  // If version requested, print it and exit without doing anything else.
  console.log(util.file.readJsonSync(__dirname + '/../package.json').version);
  process.exit();
}


smith.log.info("Welcome to "+"Blacksmith".yellow);
smith.log.info("It worked if it ends with " + "Blacksmith".yellow + " ok".green.bold);

app.init(function (err) {
  if (err) {
    return err.stack.forEach(winston.error);
  }

  app.start();
});
